// Code generated by zederr generator. DO NOT EDIT.
package {{ .PackageName }}

import (
{{- range .Imports }}
    {{ . }}
{{- end}}
)

{{- range .Errors }}
{{- $zedErr := . }}
{{- $paramsTypeName := printf "%sParams" .Name }}
// {{- $paramsTypeName}} is the parameters for {{ .Name }} error.
type {{ .Name }}Params struct {
{{- range .Fields }}
    {{ .Name }} {{ .Type }}
{{- end }}
}

// ErrorParams returns {{ $paramsTypeName}} as a map.
func (p {{ $paramsTypeName}}) ErrorParams() map[string]interface{} {
	return map[string]interface{}{
        {{- range .Fields }}
            "{{ .Name }}": p.{{ .Name }},
        {{- end }}
	}
}

// ProtoParams returns {{ $paramsTypeName}} as a protobuf struct.
func (p {{ $paramsTypeName}}) ProtoParams() *pkgstructpb.Struct {
    st, _ := pkgstructpb.NewStruct(p.ErrorParams())

	return st
}

// New{{ .Name }} creates a new {{ .Name }}.
// Description: {{ .Description }}
func New{{ .Name }}(err error, {{ errorConstructorParams $zedErr }}) *pkgzederr.Error[{{ $paramsTypeName }}] {
	return pkgzederr.NewError(err, "{{ .ID }}", {{ .HttpCode }}, pkgcodes.{{ .GrpcCode }}, {{ $paramsTypeName }}{
	    {{- range .Fields }}
            {{ .Name }}: {{ toParamName .Name }},
        {{- end }}
	})
}
{{- end }}
