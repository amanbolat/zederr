// Code generated by zederr generator. DO NOT EDIT.
package {{ .PackageName }}

import (
{{- range .Imports }}
    {{ . }}
{{- end}}
)

var defaultLocale = "{{ .DefaultLocale }}"

var localizer = func() zeerr.Localizer {
	l, err := zei18n.NewLocalizer(defaultLocale, ErrorMessages())
	if err != nil {
		panic(err)
	}

	return l
}()

{{- range .Errors }}
{{- $zedErr := . }}
{{- $paramsTypeName := printf "%sParams" .Code }}

var {{ toLowerCamel .Code }}InternalMsgTmpl = func() *template.Template {
	t, _ := template.New("").Parse("{{ .InternalMessage }}")
	return t
}()

// New{{ .Code }} creates a new {{ .Code }}.
//
// Description: {{ .Description }}
func New{{ .Code }}(ctx context.Context, {{ errorConstructorParams $zedErr }}) error {
	return zeerr.NewError(
		ctx,
		localizer,
		"{{ .Code }}",
		"{{ .Domain }}",
		"{{ .Namespace }}",
		{{ .HTTPCode }},
        pkgcodes.{{ .GrpcCode }},
		{{ toLowerCamel .Code }}InternalMsgTmpl,
		zeerr.Arguments{
            {{- range .Arguments }}
                "{{ .Name }}": {{ toParamName .Name }},
            {{- end }}
		},
	)
}
{{- end }}
